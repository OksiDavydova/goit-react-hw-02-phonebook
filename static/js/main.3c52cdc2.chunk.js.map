{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","evt","preventDefault","props","addNewContact","reset","inputNameId","shortid","generate","inputNumberId","this","onSubmit","htmlFor","type","onChange","id","pattern","title","required","Component","ContactList","contacts","handleDeleteContact","map","onClick","Filter","App","filter","addContact","contact","normalizedName","toLowerCase","find","contactItem","alert","onChangeFilter","filterTrim","trim","getContacts","normalizedFilter","includes","onDeleteContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c52cdc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3c01i\"};","import s from \"./Container.module.css\";\r\n\r\nexport function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    // const contactItem = {\r\n    //   id: shortid.generate(),\r\n    //   name: this.state.name,\r\n    //   number: this.state.number,\r\n    // };\r\n    // this.setState({ contact: contactItem });\r\n    //\r\n    this.props.addNewContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  inputNameId = shortid.generate();\r\n  // console.log(inputNameId);\r\n  inputNumberId = shortid.generate();\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor={this.inputNameId}>\r\n            Name:\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n              value={name}\r\n              name=\"name\"\r\n              id={this.inputNameId}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={this.inputNumberId}>\r\n            Number:\r\n            <input\r\n              type=\"tel\"\r\n              onChange={this.handleChange}\r\n              value={number}\r\n              name=\"number\"\r\n              id={this.inputNumberId}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ContactList({ contacts, handleDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name} <span>{number}</span>\r\n          </p>\r\n          <button type=\"button\" onClick={() => handleDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport function Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <input type=\"text\" value={value} onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { Container } from \"./components/Container/Container\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = (addContact) => {\n    const { name, number } = addContact;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(\n        (contactItem) => contactItem.name.toLowerCase() === normalizedName\n      )\n    ) {\n      alert(`${name} is already in contacts list`);\n      return;\n    } else if (contacts.find((contactItem) => contactItem.number === number)) {\n      alert(`${number} is already in contacts list`);\n      return;\n    } else {\n      this.setState(({ contacts }) => {\n        return {\n          contacts: [...contacts, contact],\n        };\n      });\n    }\n  };\n\n  onChangeFilter = (e) => {\n    const filterTrim = e.currentTarget.value.trim();\n    // if (filterTrim === \"\") {\n    //   alert(\"Please enter name\");\n    //   return;\n    // }\n    this.setState({ filter: filterTrim });\n  };\n\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    // by name\n    return contacts.filter((contactItem) =>\n      contactItem.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  onDeleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={this.addNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.filter} onChange={this.onChangeFilter} />\n        <ContactList\n          contacts={this.getContacts()}\n          handleDeleteContact={this.onDeleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}